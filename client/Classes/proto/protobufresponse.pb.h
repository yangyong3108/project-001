// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobufresponse.proto

#ifndef PROTOBUF_protobufresponse_2eproto__INCLUDED
#define PROTOBUF_protobufresponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace card_protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_protobufresponse_2eproto();
void protobuf_AssignDesc_protobufresponse_2eproto();
void protobuf_ShutdownFile_protobufresponse_2eproto();

class ProtobufColumnInfo;
class RowValue;
class RowValue_ColumnValue;
class ProtobufResponseData;

enum ProtobufColumnInfo_ColumnType {
  ProtobufColumnInfo_ColumnType_INT32 = 0,
  ProtobufColumnInfo_ColumnType_INT64 = 1,
  ProtobufColumnInfo_ColumnType_DOUBLE = 2,
  ProtobufColumnInfo_ColumnType_STRING = 3,
  ProtobufColumnInfo_ColumnType_RAW = 4,
  ProtobufColumnInfo_ColumnType_SINT32 = 5,
  ProtobufColumnInfo_ColumnType_SINT64 = 6,
  ProtobufColumnInfo_ColumnType_FIXED32 = 7,
  ProtobufColumnInfo_ColumnType_FIXED64 = 8,
  ProtobufColumnInfo_ColumnType_BOOL = 9,
  ProtobufColumnInfo_ColumnType_FLOAT = 10,
  ProtobufColumnInfo_ColumnType_UNKNOW = 11
};
bool ProtobufColumnInfo_ColumnType_IsValid(int value);
const ProtobufColumnInfo_ColumnType ProtobufColumnInfo_ColumnType_ColumnType_MIN = ProtobufColumnInfo_ColumnType_INT32;
const ProtobufColumnInfo_ColumnType ProtobufColumnInfo_ColumnType_ColumnType_MAX = ProtobufColumnInfo_ColumnType_UNKNOW;
const int ProtobufColumnInfo_ColumnType_ColumnType_ARRAYSIZE = ProtobufColumnInfo_ColumnType_ColumnType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtobufColumnInfo_ColumnType_descriptor();
inline const ::std::string& ProtobufColumnInfo_ColumnType_Name(ProtobufColumnInfo_ColumnType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtobufColumnInfo_ColumnType_descriptor(), value);
}
inline bool ProtobufColumnInfo_ColumnType_Parse(
    const ::std::string& name, ProtobufColumnInfo_ColumnType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtobufColumnInfo_ColumnType>(
    ProtobufColumnInfo_ColumnType_descriptor(), name, value);
}
// ===================================================================

class ProtobufColumnInfo : public ::google::protobuf::Message {
 public:
  ProtobufColumnInfo();
  virtual ~ProtobufColumnInfo();

  ProtobufColumnInfo(const ProtobufColumnInfo& from);

  inline ProtobufColumnInfo& operator=(const ProtobufColumnInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtobufColumnInfo& default_instance();

  void Swap(ProtobufColumnInfo* other);

  // implements Message ----------------------------------------------

  ProtobufColumnInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtobufColumnInfo& from);
  void MergeFrom(const ProtobufColumnInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProtobufColumnInfo_ColumnType ColumnType;
  static const ColumnType INT32 = ProtobufColumnInfo_ColumnType_INT32;
  static const ColumnType INT64 = ProtobufColumnInfo_ColumnType_INT64;
  static const ColumnType DOUBLE = ProtobufColumnInfo_ColumnType_DOUBLE;
  static const ColumnType STRING = ProtobufColumnInfo_ColumnType_STRING;
  static const ColumnType RAW = ProtobufColumnInfo_ColumnType_RAW;
  static const ColumnType SINT32 = ProtobufColumnInfo_ColumnType_SINT32;
  static const ColumnType SINT64 = ProtobufColumnInfo_ColumnType_SINT64;
  static const ColumnType FIXED32 = ProtobufColumnInfo_ColumnType_FIXED32;
  static const ColumnType FIXED64 = ProtobufColumnInfo_ColumnType_FIXED64;
  static const ColumnType BOOL = ProtobufColumnInfo_ColumnType_BOOL;
  static const ColumnType FLOAT = ProtobufColumnInfo_ColumnType_FLOAT;
  static const ColumnType UNKNOW = ProtobufColumnInfo_ColumnType_UNKNOW;
  static inline bool ColumnType_IsValid(int value) {
    return ProtobufColumnInfo_ColumnType_IsValid(value);
  }
  static const ColumnType ColumnType_MIN =
    ProtobufColumnInfo_ColumnType_ColumnType_MIN;
  static const ColumnType ColumnType_MAX =
    ProtobufColumnInfo_ColumnType_ColumnType_MAX;
  static const int ColumnType_ARRAYSIZE =
    ProtobufColumnInfo_ColumnType_ColumnType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ColumnType_descriptor() {
    return ProtobufColumnInfo_ColumnType_descriptor();
  }
  static inline const ::std::string& ColumnType_Name(ColumnType value) {
    return ProtobufColumnInfo_ColumnType_Name(value);
  }
  static inline bool ColumnType_Parse(const ::std::string& name,
      ColumnType* value) {
    return ProtobufColumnInfo_ColumnType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .card_protobuf.ProtobufColumnInfo.ColumnType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::card_protobuf::ProtobufColumnInfo_ColumnType type() const;
  inline void set_type(::card_protobuf::ProtobufColumnInfo_ColumnType value);

  // optional int32 precision = 3;
  inline bool has_precision() const;
  inline void clear_precision();
  static const int kPrecisionFieldNumber = 3;
  inline ::google::protobuf::int32 precision() const;
  inline void set_precision(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:card_protobuf.ProtobufColumnInfo)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_precision();
  inline void clear_has_precision();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  int type_;
  ::google::protobuf::int32 precision_;
  friend void  protobuf_AddDesc_protobufresponse_2eproto();
  friend void protobuf_AssignDesc_protobufresponse_2eproto();
  friend void protobuf_ShutdownFile_protobufresponse_2eproto();

  void InitAsDefaultInstance();
  static ProtobufColumnInfo* default_instance_;
};
// -------------------------------------------------------------------

class RowValue_ColumnValue : public ::google::protobuf::Message {
 public:
  RowValue_ColumnValue();
  virtual ~RowValue_ColumnValue();

  RowValue_ColumnValue(const RowValue_ColumnValue& from);

  inline RowValue_ColumnValue& operator=(const RowValue_ColumnValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RowValue_ColumnValue& default_instance();

  void Swap(RowValue_ColumnValue* other);

  // implements Message ----------------------------------------------

  RowValue_ColumnValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RowValue_ColumnValue& from);
  void MergeFrom(const RowValue_ColumnValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 int32Value = 1;
  inline bool has_int32value() const;
  inline void clear_int32value();
  static const int kInt32ValueFieldNumber = 1;
  inline ::google::protobuf::int32 int32value() const;
  inline void set_int32value(::google::protobuf::int32 value);

  // optional int64 int64Value = 2;
  inline bool has_int64value() const;
  inline void clear_int64value();
  static const int kInt64ValueFieldNumber = 2;
  inline ::google::protobuf::int64 int64value() const;
  inline void set_int64value(::google::protobuf::int64 value);

  // optional double doubleValue = 3;
  inline bool has_doublevalue() const;
  inline void clear_doublevalue();
  static const int kDoubleValueFieldNumber = 3;
  inline double doublevalue() const;
  inline void set_doublevalue(double value);

  // optional string stringValue = 4;
  inline bool has_stringvalue() const;
  inline void clear_stringvalue();
  static const int kStringValueFieldNumber = 4;
  inline const ::std::string& stringvalue() const;
  inline void set_stringvalue(const ::std::string& value);
  inline void set_stringvalue(const char* value);
  inline void set_stringvalue(const char* value, size_t size);
  inline ::std::string* mutable_stringvalue();
  inline ::std::string* release_stringvalue();
  inline void set_allocated_stringvalue(::std::string* stringvalue);

  // optional bytes bytesValue = 5;
  inline bool has_bytesvalue() const;
  inline void clear_bytesvalue();
  static const int kBytesValueFieldNumber = 5;
  inline const ::std::string& bytesvalue() const;
  inline void set_bytesvalue(const ::std::string& value);
  inline void set_bytesvalue(const char* value);
  inline void set_bytesvalue(const void* value, size_t size);
  inline ::std::string* mutable_bytesvalue();
  inline ::std::string* release_bytesvalue();
  inline void set_allocated_bytesvalue(::std::string* bytesvalue);

  // optional sint32 sint32Value = 6;
  inline bool has_sint32value() const;
  inline void clear_sint32value();
  static const int kSint32ValueFieldNumber = 6;
  inline ::google::protobuf::int32 sint32value() const;
  inline void set_sint32value(::google::protobuf::int32 value);

  // optional sint64 sint64Value = 7;
  inline bool has_sint64value() const;
  inline void clear_sint64value();
  static const int kSint64ValueFieldNumber = 7;
  inline ::google::protobuf::int64 sint64value() const;
  inline void set_sint64value(::google::protobuf::int64 value);

  // optional fixed32 fixed32Value = 8;
  inline bool has_fixed32value() const;
  inline void clear_fixed32value();
  static const int kFixed32ValueFieldNumber = 8;
  inline ::google::protobuf::uint32 fixed32value() const;
  inline void set_fixed32value(::google::protobuf::uint32 value);

  // optional fixed64 fixed64Value = 9;
  inline bool has_fixed64value() const;
  inline void clear_fixed64value();
  static const int kFixed64ValueFieldNumber = 9;
  inline ::google::protobuf::uint64 fixed64value() const;
  inline void set_fixed64value(::google::protobuf::uint64 value);

  // optional bool boolValue = 10;
  inline bool has_boolvalue() const;
  inline void clear_boolvalue();
  static const int kBoolValueFieldNumber = 10;
  inline bool boolvalue() const;
  inline void set_boolvalue(bool value);

  // optional float floatValue = 11;
  inline bool has_floatvalue() const;
  inline void clear_floatvalue();
  static const int kFloatValueFieldNumber = 11;
  inline float floatvalue() const;
  inline void set_floatvalue(float value);

  // @@protoc_insertion_point(class_scope:card_protobuf.RowValue.ColumnValue)
 private:
  inline void set_has_int32value();
  inline void clear_has_int32value();
  inline void set_has_int64value();
  inline void clear_has_int64value();
  inline void set_has_doublevalue();
  inline void clear_has_doublevalue();
  inline void set_has_stringvalue();
  inline void clear_has_stringvalue();
  inline void set_has_bytesvalue();
  inline void clear_has_bytesvalue();
  inline void set_has_sint32value();
  inline void clear_has_sint32value();
  inline void set_has_sint64value();
  inline void clear_has_sint64value();
  inline void set_has_fixed32value();
  inline void clear_has_fixed32value();
  inline void set_has_fixed64value();
  inline void clear_has_fixed64value();
  inline void set_has_boolvalue();
  inline void clear_has_boolvalue();
  inline void set_has_floatvalue();
  inline void clear_has_floatvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 int64value_;
  double doublevalue_;
  ::google::protobuf::int32 int32value_;
  ::google::protobuf::int32 sint32value_;
  ::std::string* stringvalue_;
  ::std::string* bytesvalue_;
  ::google::protobuf::int64 sint64value_;
  ::google::protobuf::uint64 fixed64value_;
  ::google::protobuf::uint32 fixed32value_;
  bool boolvalue_;
  float floatvalue_;
  friend void  protobuf_AddDesc_protobufresponse_2eproto();
  friend void protobuf_AssignDesc_protobufresponse_2eproto();
  friend void protobuf_ShutdownFile_protobufresponse_2eproto();

  void InitAsDefaultInstance();
  static RowValue_ColumnValue* default_instance_;
};
// -------------------------------------------------------------------

class RowValue : public ::google::protobuf::Message {
 public:
  RowValue();
  virtual ~RowValue();

  RowValue(const RowValue& from);

  inline RowValue& operator=(const RowValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RowValue& default_instance();

  void Swap(RowValue* other);

  // implements Message ----------------------------------------------

  RowValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RowValue& from);
  void MergeFrom(const RowValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RowValue_ColumnValue ColumnValue;

  // accessors -------------------------------------------------------

  // repeated .card_protobuf.RowValue.ColumnValue columnValue = 1;
  inline int columnvalue_size() const;
  inline void clear_columnvalue();
  static const int kColumnValueFieldNumber = 1;
  inline const ::card_protobuf::RowValue_ColumnValue& columnvalue(int index) const;
  inline ::card_protobuf::RowValue_ColumnValue* mutable_columnvalue(int index);
  inline ::card_protobuf::RowValue_ColumnValue* add_columnvalue();
  inline const ::google::protobuf::RepeatedPtrField< ::card_protobuf::RowValue_ColumnValue >&
      columnvalue() const;
  inline ::google::protobuf::RepeatedPtrField< ::card_protobuf::RowValue_ColumnValue >*
      mutable_columnvalue();

  // @@protoc_insertion_point(class_scope:card_protobuf.RowValue)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::card_protobuf::RowValue_ColumnValue > columnvalue_;
  friend void  protobuf_AddDesc_protobufresponse_2eproto();
  friend void protobuf_AssignDesc_protobufresponse_2eproto();
  friend void protobuf_ShutdownFile_protobufresponse_2eproto();

  void InitAsDefaultInstance();
  static RowValue* default_instance_;
};
// -------------------------------------------------------------------

class ProtobufResponseData : public ::google::protobuf::Message {
 public:
  ProtobufResponseData();
  virtual ~ProtobufResponseData();

  ProtobufResponseData(const ProtobufResponseData& from);

  inline ProtobufResponseData& operator=(const ProtobufResponseData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtobufResponseData& default_instance();

  void Swap(ProtobufResponseData* other);

  // implements Message ----------------------------------------------

  ProtobufResponseData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtobufResponseData& from);
  void MergeFrom(const ProtobufResponseData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .card_protobuf.ProtobufColumnInfo columnInfo = 1;
  inline int columninfo_size() const;
  inline void clear_columninfo();
  static const int kColumnInfoFieldNumber = 1;
  inline const ::card_protobuf::ProtobufColumnInfo& columninfo(int index) const;
  inline ::card_protobuf::ProtobufColumnInfo* mutable_columninfo(int index);
  inline ::card_protobuf::ProtobufColumnInfo* add_columninfo();
  inline const ::google::protobuf::RepeatedPtrField< ::card_protobuf::ProtobufColumnInfo >&
      columninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::card_protobuf::ProtobufColumnInfo >*
      mutable_columninfo();

  // repeated .card_protobuf.RowValue rowValue = 2;
  inline int rowvalue_size() const;
  inline void clear_rowvalue();
  static const int kRowValueFieldNumber = 2;
  inline const ::card_protobuf::RowValue& rowvalue(int index) const;
  inline ::card_protobuf::RowValue* mutable_rowvalue(int index);
  inline ::card_protobuf::RowValue* add_rowvalue();
  inline const ::google::protobuf::RepeatedPtrField< ::card_protobuf::RowValue >&
      rowvalue() const;
  inline ::google::protobuf::RepeatedPtrField< ::card_protobuf::RowValue >*
      mutable_rowvalue();

  // @@protoc_insertion_point(class_scope:card_protobuf.ProtobufResponseData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::card_protobuf::ProtobufColumnInfo > columninfo_;
  ::google::protobuf::RepeatedPtrField< ::card_protobuf::RowValue > rowvalue_;
  friend void  protobuf_AddDesc_protobufresponse_2eproto();
  friend void protobuf_AssignDesc_protobufresponse_2eproto();
  friend void protobuf_ShutdownFile_protobufresponse_2eproto();

  void InitAsDefaultInstance();
  static ProtobufResponseData* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtobufColumnInfo

// required string name = 1;
inline bool ProtobufColumnInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtobufColumnInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtobufColumnInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtobufColumnInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ProtobufColumnInfo::name() const {
  // @@protoc_insertion_point(field_get:card_protobuf.ProtobufColumnInfo.name)
  return *name_;
}
inline void ProtobufColumnInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:card_protobuf.ProtobufColumnInfo.name)
}
inline void ProtobufColumnInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:card_protobuf.ProtobufColumnInfo.name)
}
inline void ProtobufColumnInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:card_protobuf.ProtobufColumnInfo.name)
}
inline ::std::string* ProtobufColumnInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:card_protobuf.ProtobufColumnInfo.name)
  return name_;
}
inline ::std::string* ProtobufColumnInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ProtobufColumnInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:card_protobuf.ProtobufColumnInfo.name)
}

// required .card_protobuf.ProtobufColumnInfo.ColumnType type = 2;
inline bool ProtobufColumnInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtobufColumnInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtobufColumnInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtobufColumnInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::card_protobuf::ProtobufColumnInfo_ColumnType ProtobufColumnInfo::type() const {
  // @@protoc_insertion_point(field_get:card_protobuf.ProtobufColumnInfo.type)
  return static_cast< ::card_protobuf::ProtobufColumnInfo_ColumnType >(type_);
}
inline void ProtobufColumnInfo::set_type(::card_protobuf::ProtobufColumnInfo_ColumnType value) {
  assert(::card_protobuf::ProtobufColumnInfo_ColumnType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:card_protobuf.ProtobufColumnInfo.type)
}

// optional int32 precision = 3;
inline bool ProtobufColumnInfo::has_precision() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtobufColumnInfo::set_has_precision() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtobufColumnInfo::clear_has_precision() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtobufColumnInfo::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
inline ::google::protobuf::int32 ProtobufColumnInfo::precision() const {
  // @@protoc_insertion_point(field_get:card_protobuf.ProtobufColumnInfo.precision)
  return precision_;
}
inline void ProtobufColumnInfo::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:card_protobuf.ProtobufColumnInfo.precision)
}

// -------------------------------------------------------------------

// RowValue_ColumnValue

// optional int32 int32Value = 1;
inline bool RowValue_ColumnValue::has_int32value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RowValue_ColumnValue::set_has_int32value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RowValue_ColumnValue::clear_has_int32value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RowValue_ColumnValue::clear_int32value() {
  int32value_ = 0;
  clear_has_int32value();
}
inline ::google::protobuf::int32 RowValue_ColumnValue::int32value() const {
  // @@protoc_insertion_point(field_get:card_protobuf.RowValue.ColumnValue.int32Value)
  return int32value_;
}
inline void RowValue_ColumnValue::set_int32value(::google::protobuf::int32 value) {
  set_has_int32value();
  int32value_ = value;
  // @@protoc_insertion_point(field_set:card_protobuf.RowValue.ColumnValue.int32Value)
}

// optional int64 int64Value = 2;
inline bool RowValue_ColumnValue::has_int64value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RowValue_ColumnValue::set_has_int64value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RowValue_ColumnValue::clear_has_int64value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RowValue_ColumnValue::clear_int64value() {
  int64value_ = GOOGLE_LONGLONG(0);
  clear_has_int64value();
}
inline ::google::protobuf::int64 RowValue_ColumnValue::int64value() const {
  // @@protoc_insertion_point(field_get:card_protobuf.RowValue.ColumnValue.int64Value)
  return int64value_;
}
inline void RowValue_ColumnValue::set_int64value(::google::protobuf::int64 value) {
  set_has_int64value();
  int64value_ = value;
  // @@protoc_insertion_point(field_set:card_protobuf.RowValue.ColumnValue.int64Value)
}

// optional double doubleValue = 3;
inline bool RowValue_ColumnValue::has_doublevalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RowValue_ColumnValue::set_has_doublevalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RowValue_ColumnValue::clear_has_doublevalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RowValue_ColumnValue::clear_doublevalue() {
  doublevalue_ = 0;
  clear_has_doublevalue();
}
inline double RowValue_ColumnValue::doublevalue() const {
  // @@protoc_insertion_point(field_get:card_protobuf.RowValue.ColumnValue.doubleValue)
  return doublevalue_;
}
inline void RowValue_ColumnValue::set_doublevalue(double value) {
  set_has_doublevalue();
  doublevalue_ = value;
  // @@protoc_insertion_point(field_set:card_protobuf.RowValue.ColumnValue.doubleValue)
}

// optional string stringValue = 4;
inline bool RowValue_ColumnValue::has_stringvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RowValue_ColumnValue::set_has_stringvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RowValue_ColumnValue::clear_has_stringvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RowValue_ColumnValue::clear_stringvalue() {
  if (stringvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stringvalue_->clear();
  }
  clear_has_stringvalue();
}
inline const ::std::string& RowValue_ColumnValue::stringvalue() const {
  // @@protoc_insertion_point(field_get:card_protobuf.RowValue.ColumnValue.stringValue)
  return *stringvalue_;
}
inline void RowValue_ColumnValue::set_stringvalue(const ::std::string& value) {
  set_has_stringvalue();
  if (stringvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stringvalue_ = new ::std::string;
  }
  stringvalue_->assign(value);
  // @@protoc_insertion_point(field_set:card_protobuf.RowValue.ColumnValue.stringValue)
}
inline void RowValue_ColumnValue::set_stringvalue(const char* value) {
  set_has_stringvalue();
  if (stringvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stringvalue_ = new ::std::string;
  }
  stringvalue_->assign(value);
  // @@protoc_insertion_point(field_set_char:card_protobuf.RowValue.ColumnValue.stringValue)
}
inline void RowValue_ColumnValue::set_stringvalue(const char* value, size_t size) {
  set_has_stringvalue();
  if (stringvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stringvalue_ = new ::std::string;
  }
  stringvalue_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:card_protobuf.RowValue.ColumnValue.stringValue)
}
inline ::std::string* RowValue_ColumnValue::mutable_stringvalue() {
  set_has_stringvalue();
  if (stringvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stringvalue_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:card_protobuf.RowValue.ColumnValue.stringValue)
  return stringvalue_;
}
inline ::std::string* RowValue_ColumnValue::release_stringvalue() {
  clear_has_stringvalue();
  if (stringvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stringvalue_;
    stringvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RowValue_ColumnValue::set_allocated_stringvalue(::std::string* stringvalue) {
  if (stringvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stringvalue_;
  }
  if (stringvalue) {
    set_has_stringvalue();
    stringvalue_ = stringvalue;
  } else {
    clear_has_stringvalue();
    stringvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:card_protobuf.RowValue.ColumnValue.stringValue)
}

// optional bytes bytesValue = 5;
inline bool RowValue_ColumnValue::has_bytesvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RowValue_ColumnValue::set_has_bytesvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RowValue_ColumnValue::clear_has_bytesvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RowValue_ColumnValue::clear_bytesvalue() {
  if (bytesvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bytesvalue_->clear();
  }
  clear_has_bytesvalue();
}
inline const ::std::string& RowValue_ColumnValue::bytesvalue() const {
  // @@protoc_insertion_point(field_get:card_protobuf.RowValue.ColumnValue.bytesValue)
  return *bytesvalue_;
}
inline void RowValue_ColumnValue::set_bytesvalue(const ::std::string& value) {
  set_has_bytesvalue();
  if (bytesvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bytesvalue_ = new ::std::string;
  }
  bytesvalue_->assign(value);
  // @@protoc_insertion_point(field_set:card_protobuf.RowValue.ColumnValue.bytesValue)
}
inline void RowValue_ColumnValue::set_bytesvalue(const char* value) {
  set_has_bytesvalue();
  if (bytesvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bytesvalue_ = new ::std::string;
  }
  bytesvalue_->assign(value);
  // @@protoc_insertion_point(field_set_char:card_protobuf.RowValue.ColumnValue.bytesValue)
}
inline void RowValue_ColumnValue::set_bytesvalue(const void* value, size_t size) {
  set_has_bytesvalue();
  if (bytesvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bytesvalue_ = new ::std::string;
  }
  bytesvalue_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:card_protobuf.RowValue.ColumnValue.bytesValue)
}
inline ::std::string* RowValue_ColumnValue::mutable_bytesvalue() {
  set_has_bytesvalue();
  if (bytesvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bytesvalue_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:card_protobuf.RowValue.ColumnValue.bytesValue)
  return bytesvalue_;
}
inline ::std::string* RowValue_ColumnValue::release_bytesvalue() {
  clear_has_bytesvalue();
  if (bytesvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = bytesvalue_;
    bytesvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RowValue_ColumnValue::set_allocated_bytesvalue(::std::string* bytesvalue) {
  if (bytesvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bytesvalue_;
  }
  if (bytesvalue) {
    set_has_bytesvalue();
    bytesvalue_ = bytesvalue;
  } else {
    clear_has_bytesvalue();
    bytesvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:card_protobuf.RowValue.ColumnValue.bytesValue)
}

// optional sint32 sint32Value = 6;
inline bool RowValue_ColumnValue::has_sint32value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RowValue_ColumnValue::set_has_sint32value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RowValue_ColumnValue::clear_has_sint32value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RowValue_ColumnValue::clear_sint32value() {
  sint32value_ = 0;
  clear_has_sint32value();
}
inline ::google::protobuf::int32 RowValue_ColumnValue::sint32value() const {
  // @@protoc_insertion_point(field_get:card_protobuf.RowValue.ColumnValue.sint32Value)
  return sint32value_;
}
inline void RowValue_ColumnValue::set_sint32value(::google::protobuf::int32 value) {
  set_has_sint32value();
  sint32value_ = value;
  // @@protoc_insertion_point(field_set:card_protobuf.RowValue.ColumnValue.sint32Value)
}

// optional sint64 sint64Value = 7;
inline bool RowValue_ColumnValue::has_sint64value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RowValue_ColumnValue::set_has_sint64value() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RowValue_ColumnValue::clear_has_sint64value() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RowValue_ColumnValue::clear_sint64value() {
  sint64value_ = GOOGLE_LONGLONG(0);
  clear_has_sint64value();
}
inline ::google::protobuf::int64 RowValue_ColumnValue::sint64value() const {
  // @@protoc_insertion_point(field_get:card_protobuf.RowValue.ColumnValue.sint64Value)
  return sint64value_;
}
inline void RowValue_ColumnValue::set_sint64value(::google::protobuf::int64 value) {
  set_has_sint64value();
  sint64value_ = value;
  // @@protoc_insertion_point(field_set:card_protobuf.RowValue.ColumnValue.sint64Value)
}

// optional fixed32 fixed32Value = 8;
inline bool RowValue_ColumnValue::has_fixed32value() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RowValue_ColumnValue::set_has_fixed32value() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RowValue_ColumnValue::clear_has_fixed32value() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RowValue_ColumnValue::clear_fixed32value() {
  fixed32value_ = 0u;
  clear_has_fixed32value();
}
inline ::google::protobuf::uint32 RowValue_ColumnValue::fixed32value() const {
  // @@protoc_insertion_point(field_get:card_protobuf.RowValue.ColumnValue.fixed32Value)
  return fixed32value_;
}
inline void RowValue_ColumnValue::set_fixed32value(::google::protobuf::uint32 value) {
  set_has_fixed32value();
  fixed32value_ = value;
  // @@protoc_insertion_point(field_set:card_protobuf.RowValue.ColumnValue.fixed32Value)
}

// optional fixed64 fixed64Value = 9;
inline bool RowValue_ColumnValue::has_fixed64value() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RowValue_ColumnValue::set_has_fixed64value() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RowValue_ColumnValue::clear_has_fixed64value() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RowValue_ColumnValue::clear_fixed64value() {
  fixed64value_ = GOOGLE_ULONGLONG(0);
  clear_has_fixed64value();
}
inline ::google::protobuf::uint64 RowValue_ColumnValue::fixed64value() const {
  // @@protoc_insertion_point(field_get:card_protobuf.RowValue.ColumnValue.fixed64Value)
  return fixed64value_;
}
inline void RowValue_ColumnValue::set_fixed64value(::google::protobuf::uint64 value) {
  set_has_fixed64value();
  fixed64value_ = value;
  // @@protoc_insertion_point(field_set:card_protobuf.RowValue.ColumnValue.fixed64Value)
}

// optional bool boolValue = 10;
inline bool RowValue_ColumnValue::has_boolvalue() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RowValue_ColumnValue::set_has_boolvalue() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RowValue_ColumnValue::clear_has_boolvalue() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RowValue_ColumnValue::clear_boolvalue() {
  boolvalue_ = false;
  clear_has_boolvalue();
}
inline bool RowValue_ColumnValue::boolvalue() const {
  // @@protoc_insertion_point(field_get:card_protobuf.RowValue.ColumnValue.boolValue)
  return boolvalue_;
}
inline void RowValue_ColumnValue::set_boolvalue(bool value) {
  set_has_boolvalue();
  boolvalue_ = value;
  // @@protoc_insertion_point(field_set:card_protobuf.RowValue.ColumnValue.boolValue)
}

// optional float floatValue = 11;
inline bool RowValue_ColumnValue::has_floatvalue() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RowValue_ColumnValue::set_has_floatvalue() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RowValue_ColumnValue::clear_has_floatvalue() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RowValue_ColumnValue::clear_floatvalue() {
  floatvalue_ = 0;
  clear_has_floatvalue();
}
inline float RowValue_ColumnValue::floatvalue() const {
  // @@protoc_insertion_point(field_get:card_protobuf.RowValue.ColumnValue.floatValue)
  return floatvalue_;
}
inline void RowValue_ColumnValue::set_floatvalue(float value) {
  set_has_floatvalue();
  floatvalue_ = value;
  // @@protoc_insertion_point(field_set:card_protobuf.RowValue.ColumnValue.floatValue)
}

// -------------------------------------------------------------------

// RowValue

// repeated .card_protobuf.RowValue.ColumnValue columnValue = 1;
inline int RowValue::columnvalue_size() const {
  return columnvalue_.size();
}
inline void RowValue::clear_columnvalue() {
  columnvalue_.Clear();
}
inline const ::card_protobuf::RowValue_ColumnValue& RowValue::columnvalue(int index) const {
  // @@protoc_insertion_point(field_get:card_protobuf.RowValue.columnValue)
  return columnvalue_.Get(index);
}
inline ::card_protobuf::RowValue_ColumnValue* RowValue::mutable_columnvalue(int index) {
  // @@protoc_insertion_point(field_mutable:card_protobuf.RowValue.columnValue)
  return columnvalue_.Mutable(index);
}
inline ::card_protobuf::RowValue_ColumnValue* RowValue::add_columnvalue() {
  // @@protoc_insertion_point(field_add:card_protobuf.RowValue.columnValue)
  return columnvalue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::card_protobuf::RowValue_ColumnValue >&
RowValue::columnvalue() const {
  // @@protoc_insertion_point(field_list:card_protobuf.RowValue.columnValue)
  return columnvalue_;
}
inline ::google::protobuf::RepeatedPtrField< ::card_protobuf::RowValue_ColumnValue >*
RowValue::mutable_columnvalue() {
  // @@protoc_insertion_point(field_mutable_list:card_protobuf.RowValue.columnValue)
  return &columnvalue_;
}

// -------------------------------------------------------------------

// ProtobufResponseData

// repeated .card_protobuf.ProtobufColumnInfo columnInfo = 1;
inline int ProtobufResponseData::columninfo_size() const {
  return columninfo_.size();
}
inline void ProtobufResponseData::clear_columninfo() {
  columninfo_.Clear();
}
inline const ::card_protobuf::ProtobufColumnInfo& ProtobufResponseData::columninfo(int index) const {
  // @@protoc_insertion_point(field_get:card_protobuf.ProtobufResponseData.columnInfo)
  return columninfo_.Get(index);
}
inline ::card_protobuf::ProtobufColumnInfo* ProtobufResponseData::mutable_columninfo(int index) {
  // @@protoc_insertion_point(field_mutable:card_protobuf.ProtobufResponseData.columnInfo)
  return columninfo_.Mutable(index);
}
inline ::card_protobuf::ProtobufColumnInfo* ProtobufResponseData::add_columninfo() {
  // @@protoc_insertion_point(field_add:card_protobuf.ProtobufResponseData.columnInfo)
  return columninfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::card_protobuf::ProtobufColumnInfo >&
ProtobufResponseData::columninfo() const {
  // @@protoc_insertion_point(field_list:card_protobuf.ProtobufResponseData.columnInfo)
  return columninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::card_protobuf::ProtobufColumnInfo >*
ProtobufResponseData::mutable_columninfo() {
  // @@protoc_insertion_point(field_mutable_list:card_protobuf.ProtobufResponseData.columnInfo)
  return &columninfo_;
}

// repeated .card_protobuf.RowValue rowValue = 2;
inline int ProtobufResponseData::rowvalue_size() const {
  return rowvalue_.size();
}
inline void ProtobufResponseData::clear_rowvalue() {
  rowvalue_.Clear();
}
inline const ::card_protobuf::RowValue& ProtobufResponseData::rowvalue(int index) const {
  // @@protoc_insertion_point(field_get:card_protobuf.ProtobufResponseData.rowValue)
  return rowvalue_.Get(index);
}
inline ::card_protobuf::RowValue* ProtobufResponseData::mutable_rowvalue(int index) {
  // @@protoc_insertion_point(field_mutable:card_protobuf.ProtobufResponseData.rowValue)
  return rowvalue_.Mutable(index);
}
inline ::card_protobuf::RowValue* ProtobufResponseData::add_rowvalue() {
  // @@protoc_insertion_point(field_add:card_protobuf.ProtobufResponseData.rowValue)
  return rowvalue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::card_protobuf::RowValue >&
ProtobufResponseData::rowvalue() const {
  // @@protoc_insertion_point(field_list:card_protobuf.ProtobufResponseData.rowValue)
  return rowvalue_;
}
inline ::google::protobuf::RepeatedPtrField< ::card_protobuf::RowValue >*
ProtobufResponseData::mutable_rowvalue() {
  // @@protoc_insertion_point(field_mutable_list:card_protobuf.ProtobufResponseData.rowValue)
  return &rowvalue_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace card_protobuf

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::card_protobuf::ProtobufColumnInfo_ColumnType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::card_protobuf::ProtobufColumnInfo_ColumnType>() {
  return ::card_protobuf::ProtobufColumnInfo_ColumnType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protobufresponse_2eproto__INCLUDED
